@startuml

title __HUMAN_EXAMPLE's Class Diagram__\n

  namespace  {
    namespace om.abolfazl.human_example {
      interface com.abolfazl.human_example.Actor {
          {abstract} + addFilm()
          {abstract} + getActingSchool()
          {abstract} + getFilms()
          {abstract} + setActingSchool()
          {abstract} + setFilms()
      }
    }
  }
  

  namespace  {
    namespace om.abolfazl.human_example {
      interface com.abolfazl.human_example.Artist {
          {abstract} + getSchool()
          + isCreative()
          {abstract} + setSchool()
      }
    }
  }
  

  namespace  {
    namespace om.abolfazl.human_example {
      enum Gender {
        FEMALE
        MALE
        UNDEFINED
        descr
        repr
      }
    }
  }
  

  namespace  {
    namespace om.abolfazl.human_example {
      class com.abolfazl.human_example.GenericsDemo {
          {static} + main()
      }
    }
  }
  

  namespace  {
    namespace om.abolfazl.human_example {
      abstract class com.abolfazl.human_example.Human {
          {static} + LIFESPAN : int
          - age : int
          - height : float
          - name : String
          + Human()
          + Human()
          + getAge()
          + getGender()
          + getHeight()
          + getName()
          {abstract} + getTimeToLive()
          + setAge()
          + setHeight()
          + setName()
      }
    }
  }
  

  namespace  {
    namespace om.abolfazl.human_example {
      class com.abolfazl.human_example.Main {
          {static} + main()
      }
    }
  }
  

  namespace  {
    namespace om.abolfazl.human_example {
      interface com.abolfazl.human_example.Musician {
          {abstract} + getGenre()
          {abstract} + getMusicSchool()
          {abstract} + getSongs()
          {abstract} + getSongs()
          {abstract} + setGenere()
          {abstract} + setMusicSchool()
      }
    }
  }
  

  namespace  {
    namespace om.abolfazl.human_example {
      class com.abolfazl.human_example.Pair {
          {static} + of()
          + toString()
          + x()
          + x()
          + y()
          + y()
          - Pair()
      }
    }
  }
  

  namespace  {
    namespace om.abolfazl.human_example {
      class com.abolfazl.human_example.Performer {
          - actingSchool : String
          - films : List<String>
          - genre : String
          - musicSchool : String
          - songs : List<String>
          + Performer()
          + addFilm()
          + addSong()
          + getActingSchool()
          + getFilms()
          + getGenre()
          + getMusicSchool()
          + getSchool()
          + getSongs()
          + getSongs()
          + getTimeToLive()
          + setActingSchool()
          + setFilms()
          + setGenere()
          + setMusicSchool()
          + setSchool()
          + setSongs()
      }
    }
  }
  

  com.abolfazl.human_example.Human o-- com.abolfazl.human_example.Gender : gender
  com.abolfazl.human_example.Pair o-- X : x
  com.abolfazl.human_example.Pair o-- Y : y
  com.abolfazl.human_example.Performer .up.|> com.abolfazl.human_example.Actor
  com.abolfazl.human_example.Performer .up.|> com.abolfazl.human_example.Artist
  com.abolfazl.human_example.Performer .up.|> com.abolfazl.human_example.Musician
  com.abolfazl.human_example.Performer -up-|> com.abolfazl.human_example.Human


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
